- name: WHEN request body matches specified value bodyMatchesText MUST be successful
  method: POST
  path: /test/case
  request: "hello world"
  response:
    200: result
  mocks:
    someservice:
      requestConstraints:
        - kind: bodyMatchesText
          body: "hello world"
      strategy: constant
      body: result
      statusCode: 200

- name: WHEN request body does not match specified value bodyMatchesText MUST fail
  method: POST
  path: /test/case
  request: "hello world"
  response:
    200: result
  mocks:
    someservice:
      requestConstraints:
        - kind: bodyMatchesText
          body: "hello me"
      strategy: constant
      body: result
      statusCode: 200
  meta:
    expected: |
       1) mock 'someservice': request constraint 'bodyMatchesText': request 'body': values do not match:
            expected: hello me
              actual: hello world

- name: WHEN request body matches specified regexp bodyMatchesText MUST be successful
  method: POST
  path: /test/case
  request: "hello world"
  response:
    200: result
  mocks:
    someservice:
      requestConstraints:
        - kind: bodyMatchesText
          regexp: "^(hello.*)$"
      strategy: constant
      body: result
      statusCode: 200

- name: WHEN request body does not match specified value bodyMatchesText MUST fail
  method: POST
  path: /test/case
  request: "hello world"
  response:
    200: result
  mocks:
    someservice:
      requestConstraints:
        - kind: bodyMatchesText
          regexp: "^(test.*)$"
      strategy: constant
      body: result
      statusCode: 200
  meta:
    expected: |
       1) mock 'someservice': request constraint 'bodyMatchesText': request 'body': value does not match regexp:
            expected: $matchRegexp(^(test.*)$)
              actual: hello world

- name: WHEN field 'regexp' has wrong regular expression in bodyMatchesText parser MUST fail with error
  method: POST
  path: /test/case
  request: >
    {
      "param": "value",
      "otherparam": "value"
    }
  response:
    200: result
  mocks:
    someservice:
      requestConstraints:
        - kind: bodyMatchesText
          regexp: "["
      strategy: constant
      body: "result"
      statusCode: 200
  meta:
    expected: |
       1) mock 'someservice': request constraint 'bodyMatchesText': request 'body': cannot compile regexp:
            expected: <nil>
              actual: missing closing ]: `[`
