- name: WHEN required body consists matcher check MUST compare response body as string
  method: GET
  path: /test/case
  response:
    200: "$matchRegexp(test)"
  mocks:
    someservice:
      strategy: constant
      headers:
         Content-Type: "application/json"
      body: >
        {"test": "value"}
      statusCode: 200

- name: WHEN required body is empty check MUST compare response body as string
  method: GET
  path: /test/case
  response:
    200: ""
  mocks:
    someservice:
      strategy: constant
      headers:
         Content-Type: "application/json"
      body: ""
      statusCode: 200

- name: WHEN required body is json check MUST compare response body as json
  method: GET
  path: /test/case
  response:
    200: >
        {
          "name": "value"
        }
  mocks:
    someservice:
      strategy: constant
      headers:
         Content-Type: "application/json"
      body: >
        {
          "name": "value",
          "extra": "extravalue"
        }
      statusCode: 200

- name: checker MUST use comparisonParams
  method: GET
  path: /test/case
  response:
    200: >
        {
          "name": "value"
        }
  comparisonParams:
    disallowExtraFields: true
  mocks:
    someservice:
      strategy: constant
      headers:
         Content-Type: "application/json"
      body: >
        {
          "name": "value",
          "extra": "extravalue"
        }
      statusCode: 200
  meta:
    expected: |
       1) service 'response body' comparison: path '$': map lengths do not match:
            expected: 1
              actual: 2

- name: WHEN service body is not json check MUST fail
  method: GET
  path: /test/case
  response:
    200: >
        {
          "name": "value"
        }
  mocks:
    someservice:
      strategy: constant
      headers:
         Content-Type: "application/json"
      body: "{"
      statusCode: 200
  meta:
    expected: |
       1) parse service 'response body' as JSON: json: unexpected end of JSON input

- name: WHEN expected body is not json check MUST fail
  method: GET
  path: /test/case
  response:
    200: "{"
  mocks:
    someservice:
      strategy: constant
      headers:
         Content-Type: "application/json"
      body: >
        {}
      statusCode: 200
  meta:
    expected: |
       1) failed to load 'response' definition (for status code '200') as JSON, so compare bodies as plain text
       2) service 'response body' comparison: path '$': values do not match:
            diff (--- expected vs +++ actual):
       -{
       +{}
       +

- name: WHEN required body consists matcher check and body does not match check MUST fail
  method: GET
  path: /test/case
  response:
    200: "$matchRegexp(wrong)"
  mocks:
    someservice:
      strategy: constant
      headers:
         Content-Type: "application/json"
      body: >
        {"test": "value"}
      statusCode: 200
  meta:
    expected: |
       1) service 'response body' comparison: path '$': value does not match regexp:
            expected: $matchRegexp(wrong)
              actual: {"test": "value"}
