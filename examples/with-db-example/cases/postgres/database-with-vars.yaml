- name: Get random number
  method: GET
  path: /randint/
  response:
    200: '{ "num": {"generated": "$matchRegexp(\\d)" } }'
  variables_to_set:
    200:
      info_id: num.generated

- name: Get info with database
  method: GET
  path: "/info/{{ $info_id }}"
  variables_to_set:
    200:
      golang_id: query_result.0.0
      gonkex_id: query_result.1.0
  response:
    200: '{"result_id": "{{ $info_id }}", "query_result": [[ {{ $golang_id }}, "golang"], [2, "gonkex"]]}'
  dbQuery: >
    SELECT id, name FROM testing WHERE id={{ $golang_id }}
  dbResponse:
    - '{"id": {{ $golang_id }}, "name": "golang"}'
  dbChecks:
    - dbQuery: >
        SELECT id, name FROM testing WHERE id={{ $gonkex_id }}
      dbResponse:
        - '{"id": {{ $gonkex_id }}, "name": "gonkex"}'
    - dbQuery: SELECT id, name FROM testing WHERE id={{ $gonkex_id }}
      dbResponse:
        - '{"id": {{ $gonkex_id }}, "name": "$matchRegexp(gonkex)"}'
