- name: variables MUST be substituted to all parts of test
  method: "{{ $methodVar }}"
  path: "/test/vars-usage/{{ $someVar }}"
  query: "?param={{ $someVar }}"
  headers:
    Header1: "{{ $someVar }}"
  request: >
    {
      "reqParam": "{{ $someVar }}"
    }
  response:
    200: >
      {
        "data": "{{ $someVar }}"
      }
  responseHeaders:
    200:
      Some-Header: "{{ $someVar }}"

  variables:
    methodVar: POST
    someVar: "some-value"

  mocks:
    testservice:
      requestConstraints:
        - kind: methodIs
          method: POST
        - kind: pathMatches
          path: /test/vars-usage/some-value
        - kind: queryMatches
          query: param=some-value
        - kind: bodyMatchesJSON
          body: >
            {
              "reqParam": "some-value"
            }
      strategy: constant
      headers:
        Content-Type: application/json
        Some-Header: some-value
      body: >
        {
          "data": "some-value"
        }
      statusCode: 200

- name: variables MUST be substituted to all parts of mocks
  method: POST
  path: "/test/vars-usage/some-value"
  query: "?param=some-value"
  headers:
    Header1: "some-value"
  request: >
    {
      "reqParam": "some-value"
    }
  response:
    200: >
      {
        "data": "some-value"
      }
  responseHeaders:
    200:
      Some-Header: "some-value"

  variables:
    methodVar: POST
    someVar: "some-value"
    someCode: "200"
    callCount: "1"

  mocks:
    testservice:
      calls: "{{ $callCount }}"
      requestConstraints:
        - kind: methodIs
          method: "{{ $methodVar }}"
        - kind: pathMatches
          path: "/test/vars-usage/{{ $someVar }}"
        - kind: queryMatches
          query: "param={{ $someVar }}"
        - kind: bodyMatchesJSON
          body: >
            {
              "reqParam": "{{ $someVar }}"
            }
      strategy: constant
      headers:
        Content-Type: application/json
        Some-Header: "{{ $someVar }}"
      body: >
        {
          "data": "{{ $someVar }}"
        }
      statusCode: "{{ $someCode }}"
